# Set default-path
bind c neww -c $PWD

# Change default prefix to match screen
set -g prefix C-a
unbind C-b

# ctrl-a-a to go to beginning of line
bind a send-prefix

setw -g mode-keys vi
set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mode-mouse on

set -g history-limit 10000

# 12 hour clock
set-window-option -g clock-mode-style 12

# rebind the default split key bindings
unbind %
bind \ split-window -h
bind - split-window -v

# resize panes
bind < resize-pane -L 1
bind > resize-pane -R 1

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# ---------------------
# Copy & Paste
# ---------------------
# provide access to the clipboard for pbpaste, pbcopy
set-option -g default-command "reattach-to-user-namespace -l zsh"
set-window-option -g automatic-rename on

# setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# update default binding of 'Enter' to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Borrowed heavily from https://github.com/zanshin/dotfiles
# ----------------------
# set some pretty colors
# ----------------------
#set-option -g pane-border-fg colour239
#set-option -g pane-active-border-fg blue

# colorize messages in the command line
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange
set-option -g message-attr dim

set -g message-command-style "fg=colour144,bg=colour237"
set -g message-style "fg=colour144,bg=colour237"
set -g pane-active-border-style "bg=colour238"
set -g pane-border-style "bg=colour237"

set -g status on
set -g status-utf8 on
set -g status-justify "left"
set -g status-left-style "bg=colour234,none"
set -g status-right-style "bg=colour234,none"
set -g status-style "bg=colour237,none"

set -g status-left-length 20
set -g status-right-length 60

set -g status-left "#[fg=colour15,bg=colour27] #{host} #[fg=colour15,bg=colour26] #{session_name} "
set -g status-right "#[fg=colour144,bg=colour236] #(TZ=America/Los_Angeles date +'%%H') #[fg=colour144,bg=colour238] #(TZ=America/Denver date +'%%H') #[fg=colour144,bg=colour240] #(TZ=America/Chicago date +'%%H') #[fg=colour144,bg=colour242] %H:%M:%S #[fg=colour144,bg=colour244] #(TZ=UTC date +'%%H') "

setw -g window-status-separator ""
setw -g window-status-style ""
setw -g window-status-format "#[fg=colour144,bg=colour236] #{window_index} > #{window_name} "
setw -g window-status-current-format "#[fg=colour144,bg=colour234] #{window_index} > #{window_name} > #{pane_current_command} "
